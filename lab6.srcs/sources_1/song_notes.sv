module song_notes ( input [7:0]	addr,
				  output [15:0]	data
					 );

	parameter ADDR_WIDTH = 8;
	parameter DATA_WIDTH =  16;
	logic [ADDR_WIDTH-1:0] addr_reg;
				
	// ROM definition				
	parameter [DATA_WIDTH-1:0] ROM[56] = {
        16'b1000100010001000,//1
        16'b0000000000000000,
        16'b0001000100010001,//2
        16'b0001000100010001,
        16'b0010001000100010,//3
        16'b0010001000100010,
        16'b0000000000000000,//1
        16'b0000000000000000,
        16'b0001000100010001,//2
        16'b0001000100010001,
        16'b0010001000100010,//3
        16'b0010001000100010,

        16'b0010001000100010,//3
        16'b0010001000100010,
        16'b0011001100110011,//4
        16'b0011001100110011,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0010001000100010,//3
        16'b0010001000100010,
        16'b0011001100110011,//4
        16'b0011001100110011,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0011001100110011,//4
        16'b0011001100110011,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0101010101010101, //6
        16'b0101010101010101,
        16'b0011001100110011,//4
        16'b0011001100110011,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0101010101010101, //6
        16'b0101010101010101,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0101010101010101, //6
        16'b0101010101010101,
        16'b0110011001100110,//7
        16'b0110011001100110,
        16'b0100010001000100,//5
        16'b0100010001000100,
        16'b0101010101010101, //6
        16'b0101010101010101,
        16'b0110011001100110,//7
        16'b0110011001100110,
        16'b0000000000000000,//1
        16'b0000000000000000,
        16'b1101100111011101,//00
        16'b1101100111011101,
        16'b0000000000001101,//1,0
        16'b0000000000001101,
        16'b0000000000001101,
        16'b0000000000000000};

    assign data = ROM[addr];

endmodule  